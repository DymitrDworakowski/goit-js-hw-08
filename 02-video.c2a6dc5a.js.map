{"mappings":"AAyCAA,OAAOC,GAAG,aAAcC,UAJT,SAAUC,GACvB,MAAMC,EAAeC,KAAKC,UAAUH,GACpCI,aAAaC,QAAQC,SAAUL,E,GAEQ,MAEzC,WACE,GAAmD,OAA/CC,KAAKK,MAAMH,aAAaI,QAAQF,WAClC,OAEF,MAAMG,EAASP,KAAKK,MAAMH,aAAaI,QAAQF,WAAoB,QAC/DG,GACFZ,OACGa,eAAeD,GACfE,MAAK,SAAUC,GAAS,IACxBC,OAAM,SAAUC,GACPA,EAAMC,I,IAStBC","sources":["src/js/02-video.js"],"sourcesContent":["\n\n// player.setCurrentTime(120.456).then(function(seconds) {\n//   // `seconds` indicates the actual time that the player seeks to\n// }).catch(function(error) {\n//   switch (error.name) {\n//     case 'RangeError':\n//         // The time is less than 0 or greater than the video's duration\n//         break;\n//     default:\n//         // Some other error occurred\n//         break;\n//   }\n// });\n// console.log(player.setCurrentTime);\n\n// var vdo_play = \"\";\n// $(document).on('click', '.btn-video', function () {\n//   if (vdo_play) {\n//     clearInterval(vdo_play);\n//   }\n//   var player = new Vimeo.Player($(\".mfp-iframe\")[0]);\n//   var currentPos, percentage, vdoEndTym = \"\";\n//   vdo_play = setInterval(function () {\n//     player.on('timeupdate', function (getAll) {\n//       currentPos = getAll.seconds; //get currentime\n//       vdoEndTym = getAll.duration; //get video duration\n//       percentage = (getAll.percent * 100) + \"%\";\n//       console.log('currentPos: ' + currentPos);\n//       console.log('percentage: ' + percentage);\n//     });\n//     player.on('ended', function () {\n//       clearInterval(vdo_play);\n//     });\n//   }, 1000);\n// });\n\nconst onPlay = function (data) {\n  const strigifyData = JSON.stringify(data);\n  localStorage.setItem(TIME_KEY, strigifyData);\n};\nplayer.on('timeupdate', throttle(onPlay, 1000));\n\nfunction resumePlayback() {\n  if (JSON.parse(localStorage.getItem(TIME_KEY)) === null) {\n    return;\n  }\n  const paused = JSON.parse(localStorage.getItem(TIME_KEY))['seconds'];\n  if (paused) {\n    player\n      .setCurrentTime(paused)\n      .then(function (seconds) {})\n      .catch(function (error) {\n        switch (error.name) {\n          case 'Error':\n            break;\n          default:\n            break;\n        }\n      });\n  }\n}\nresumePlayback();"],"names":["player","on","throttle","data","strigifyData","JSON","stringify","localStorage","setItem","TIME_KEY","parse","getItem","paused","setCurrentTime","then","seconds","catch","error","name","$c006019e0678fe87$var$resumePlayback"],"version":3,"file":"02-video.c2a6dc5a.js.map"}